<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='time-series-tourism-nigh' inline='true' name='federated.14lvtc70wqohdf1ce2u0x186kaly' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time-series-tourism-nigh' name='textscan.17166ek12rxnv3104ncq71vvsnhx'>
            <connection class='textscan' directory='/Users/subinseol/Desktop/unimelb/GEOM90007/assignment 3' filename='time-series-tourism-nigh.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Domestic Daytrips' ordinal='1' />
            <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
            <column datatype='real' name='International Visitor Nights' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Domestic Daytrips' ordinal='1' />
            <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
            <column datatype='real' name='International Visitor Nights' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Daytrips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Daytrips]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Domestic Daytrips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Visitor Nights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Visitor Nights]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Domestic Visitor Nights</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Visitor Nights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International Visitor Nights]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>International Visitor Nights</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Domestic Daytrips]' role='measure' type='quantitative' />
      <column datatype='real' name='[Domestic Visitor Nights]' role='measure' type='quantitative' />
      <column datatype='real' name='[International Visitor Nights]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time-series-tourism-nigh.csv' datatype='table' name='[__tableau_internal_object_id__].[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]' role='measure' type='quantitative' />
      <column-instance column='[Domestic Daytrips]' derivation='Sum' name='[sum:Domestic Daytrips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic Visitor Nights]' derivation='Sum' name='[sum:Domestic Visitor Nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[International Visitor Nights]' derivation='Sum' name='[sum:International Visitor Nights:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly]&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Daytrips:qk]&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Visitor Nights:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:International Visitor Nights:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='time-series-tourism-nigh.csv' id='time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30'>
            <properties context=''>
              <relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='real' name='Domestic Daytrips' ordinal='1' />
                  <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
                  <column datatype='real' name='International Visitor Nights' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='2021_melbourne_temperature' inline='true' name='federated.0d1q6k80y1qig51ff0di71uwh0z9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2021_melbourne_temperature' name='textscan.18p7g5g1gadkud1g207wt1qpi8vf'>
            <connection class='textscan' directory='/Users/subinseol/Desktop/unimelb/GEOM90007/assignment 3' filename='2021_melbourne_temperature.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='max_temp' ordinal='1' />
            <column datatype='real' name='min_temp' ordinal='2' />
            <column datatype='real' name='mean_temp' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='max_temp' ordinal='1' />
            <column datatype='real' name='min_temp' ordinal='2' />
            <column datatype='real' name='mean_temp' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>mean_temp</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='2021_melbourne_temperature.csv' datatype='table' name='[__tableau_internal_object_id__].[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Mean Temp' datatype='real' name='[mean_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp]' derivation='Avg' name='[avg:mean_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp]' derivation='Sum' name='[sum:mean_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Sum' name='[sum:min_temp:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[__tableau_internal_object_id__].[cnt:2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D:qk]&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:mean_temp:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:mean_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2021_melbourne_temperature.csv' id='2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D'>
            <properties context=''>
              <relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='real' name='max_temp' ordinal='1' />
                  <column datatype='real' name='min_temp' ordinal='2' />
                  <column datatype='real' name='mean_temp' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Night Spent By Tourists in Melbourne</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='time-series-tourism-nigh' name='federated.14lvtc70wqohdf1ce2u0x186kaly' />
          </datasources>
          <datasource-dependencies datasource='federated.14lvtc70wqohdf1ce2u0x186kaly'>
            <column datatype='real' name='[Domestic Daytrips]' role='measure' type='quantitative' />
            <column datatype='real' name='[Domestic Visitor Nights]' role='measure' type='quantitative' />
            <column datatype='real' name='[International Visitor Nights]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Domestic Daytrips]' derivation='Sum' name='[sum:Domestic Daytrips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Domestic Visitor Nights]' derivation='Sum' name='[sum:Domestic Visitor Nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[International Visitor Nights]' derivation='Sum' name='[sum:International Visitor Nights:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Daytrips:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Visitor Nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:International Visitor Nights:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14lvtc70wqohdf1ce2u0x186kaly].[Multiple Values]' scope='rows' value='Visitors' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14lvtc70wqohdf1ce2u0x186kaly].[Multiple Values]</rows>
        <cols>[federated.14lvtc70wqohdf1ce2u0x186kaly].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{CE051B66-F1AF-4DC6-9519-C5A5654C9ED2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Temperature in Melbourne</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2021_melbourne_temperature' name='federated.0d1q6k80y1qig51ff0di71uwh0z9' />
          </datasources>
          <datasource-dependencies datasource='federated.0d1q6k80y1qig51ff0di71uwh0z9'>
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean_temp]' derivation='Avg' name='[avg:mean_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Mean Temp' datatype='real' name='[mean_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:max_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:mean_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:min_temp:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]' scope='rows' value='Temeerature' />
            <format attr='title' class='0' field='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]>'C]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]</rows>
        <cols>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{86E8991D-19CE-45BC-8192-D6BC7F2D544D}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]</field>
            <field>[federated.14lvtc70wqohdf1ce2u0x186kaly].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68267CEB-8E37-4966-8DC6-6F6274C42316}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]</field>
            <field>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCF3A302-8C0F-44AA-8BA0-CE7433ACDF3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
