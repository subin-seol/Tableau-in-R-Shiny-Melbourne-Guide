<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2021_melbourne_temperature' inline='true' name='federated.0d1q6k80y1qig51ff0di71uwh0z9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2021_melbourne_temperature' name='textscan.18p7g5g1gadkud1g207wt1qpi8vf'>
            <connection class='textscan' directory='/Users/subinseol/Desktop/GEOM90007/assignment 3' filename='2021_melbourne_temperature.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='max_temp' ordinal='1' />
            <column datatype='real' name='min_temp' ordinal='2' />
            <column datatype='real' name='mean_temp' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='max_temp' ordinal='1' />
            <column datatype='real' name='min_temp' ordinal='2' />
            <column datatype='real' name='mean_temp' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>max_temp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[min_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>min_temp</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_temp]</local-name>
            <parent-name>[2021_melbourne_temperature.csv]</parent-name>
            <remote-alias>mean_temp</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='2021_melbourne_temperature.csv' datatype='table' name='[__tableau_internal_object_id__].[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
      <column caption='Mean Temp' datatype='real' name='[mean_temp]' role='measure' type='quantitative' />
      <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp]' derivation='Avg' name='[avg:mean_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[max_temp]' derivation='Sum' name='[sum:max_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp]' derivation='Sum' name='[sum:mean_temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_temp]' derivation='Sum' name='[sum:min_temp:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[__tableau_internal_object_id__].[cnt:2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D:qk]&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:max_temp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:mean_temp:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:min_temp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:mean_temp:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[sum:max_temp:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2021_melbourne_temperature.csv' id='2021_melbourne_temperature.csv_E737556F9DCB4B7992A6EE6201BF424D'>
            <properties context=''>
              <relation connection='textscan.18p7g5g1gadkud1g207wt1qpi8vf' name='2021_melbourne_temperature.csv' table='[2021_melbourne_temperature#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='real' name='max_temp' ordinal='1' />
                  <column datatype='real' name='min_temp' ordinal='2' />
                  <column datatype='real' name='mean_temp' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='time-series-tourism-nigh' inline='true' name='federated.14lvtc70wqohdf1ce2u0x186kaly' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time-series-tourism-nigh' name='textscan.17166ek12rxnv3104ncq71vvsnhx'>
            <connection class='textscan' directory='/Users/subinseol/Desktop/GEOM90007/assignment 3' filename='time-series-tourism-nigh.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Domestic Daytrips' ordinal='1' />
            <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
            <column datatype='real' name='International Visitor Nights' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Domestic Daytrips' ordinal='1' />
            <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
            <column datatype='real' name='International Visitor Nights' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Daytrips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Daytrips]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Domestic Daytrips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic Visitor Nights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Domestic Visitor Nights]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>Domestic Visitor Nights</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Visitor Nights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[International Visitor Nights]</local-name>
            <parent-name>[time-series-tourism-nigh.csv]</parent-name>
            <remote-alias>International Visitor Nights</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Domestic Daytrips]' role='measure' type='quantitative' />
      <column datatype='real' name='[Domestic Visitor Nights]' role='measure' type='quantitative' />
      <column datatype='real' name='[International Visitor Nights]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time-series-tourism-nigh.csv' datatype='table' name='[__tableau_internal_object_id__].[time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30]' role='measure' type='quantitative' />
      <column-instance column='[Domestic Daytrips]' derivation='Sum' name='[sum:Domestic Daytrips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic Visitor Nights]' derivation='Sum' name='[sum:Domestic Visitor Nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[International Visitor Nights]' derivation='Sum' name='[sum:International Visitor Nights:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly]&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Daytrips:qk]&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Visitor Nights:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:International Visitor Nights:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='time-series-tourism-nigh.csv' id='time-series-tourism-nigh.csv_C813F4CA4BF6489A8DDDB6C2A842BA30'>
            <properties context=''>
              <relation connection='textscan.17166ek12rxnv3104ncq71vvsnhx' name='time-series-tourism-nigh.csv' table='[time-series-tourism-nigh#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='real' name='Domestic Daytrips' ordinal='1' />
                  <column datatype='real' name='Domestic Visitor Nights' ordinal='2' />
                  <column datatype='real' name='International Visitor Nights' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Night Spent By Tourists in Melbourne</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='time-series-tourism-nigh' name='federated.14lvtc70wqohdf1ce2u0x186kaly' />
          </datasources>
          <datasource-dependencies datasource='federated.14lvtc70wqohdf1ce2u0x186kaly'>
            <column datatype='real' name='[Domestic Daytrips]' role='measure' type='quantitative' />
            <column datatype='real' name='[Domestic Visitor Nights]' role='measure' type='quantitative' />
            <column datatype='real' name='[International Visitor Nights]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Domestic Daytrips]' derivation='Sum' name='[sum:Domestic Daytrips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Domestic Visitor Nights]' derivation='Sum' name='[sum:Domestic Visitor Nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[International Visitor Nights]' derivation='Sum' name='[sum:International Visitor Nights:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Daytrips:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:Domestic Visitor Nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14lvtc70wqohdf1ce2u0x186kaly].[sum:International Visitor Nights:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14lvtc70wqohdf1ce2u0x186kaly].[Multiple Values]' scope='rows' value='Visitors' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14lvtc70wqohdf1ce2u0x186kaly].[Multiple Values]</rows>
        <cols>[federated.14lvtc70wqohdf1ce2u0x186kaly].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{CE051B66-F1AF-4DC6-9519-C5A5654C9ED2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monthly Temperature in Melbourne</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2021_melbourne_temperature' name='federated.0d1q6k80y1qig51ff0di71uwh0z9' />
          </datasources>
          <datasource-dependencies datasource='federated.0d1q6k80y1qig51ff0di71uwh0z9'>
            <column-instance column='[max_temp]' derivation='Avg' name='[avg:max_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean_temp]' derivation='Avg' name='[avg:mean_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_temp]' derivation='Avg' name='[avg:min_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Max Temp' datatype='real' name='[max_temp]' role='measure' type='quantitative' />
            <column caption='Mean Temp' datatype='real' name='[mean_temp]' role='measure' type='quantitative' />
            <column caption='Min Temp' datatype='real' name='[min_temp]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:max_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:mean_temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d1q6k80y1qig51ff0di71uwh0z9].[avg:min_temp:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]' scope='rows' value='Temeerature' />
            <format attr='title' class='0' field='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]>'C]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[Multiple Values]</rows>
        <cols>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{86E8991D-19CE-45BC-8192-D6BC7F2D544D}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14lvtc70wqohdf1ce2u0x186kaly].[:Measure Names]</field>
            <field>[federated.14lvtc70wqohdf1ce2u0x186kaly].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68267CEB-8E37-4966-8DC6-6F6274C42316}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[:Measure Names]</field>
            <field>[federated.0d1q6k80y1qig51ff0di71uwh0z9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCF3A302-8C0F-44AA-8BA0-CE7433ACDF3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAc130H+G/PPQNgBgMM7hsgwfsCD5PiIZIWRUmkZaoU+YrsHC5vNsm6
      4srlY2urVNnaylZSFaUSeZOtpGSvXbIlW5ZFUrxJUKAEURTvAxdB4r4xuM85ut/+gUyLIwCU
      SMzD1d9PFUtCD/B+3Q1Mf6dfv36tCCEEiIjIcExzvQJERDQ3GABERAbFACAiMigGABGRQTEA
      iIgMigFARGRQDAAiIoNiABARGRQDgIjIoBgARAtEa2srysvLoWkaAKCjowMXL16c47WihYwB
      QLRAuFwu/NM//RNqa2shhMBrr72GpqYmAIAQAqFQCA/O7CKEgKqq4GwvNB3LXK8AEX0xXq8X
      L730El5//XX86Z/+Kerr6/HjH/8YwWAQP/3pT3Hr1i2sXLkS3//+9zE4OIh/+7d/Q3t7O7Kz
      s/E3f/M3aGtrw4cffgi3243u7m785V/+5VxvEs0xngEQLSAvvPAC2tra8JOf/ATf/e53ERcX
      h9OnT6OlpQWvvfYauru7UVpaCovFghdffBH//M//jIGBAZSWlqK/vx9vvvkmLl++jO3bt8/1
      ptA8wDMAogUkLi4OL730En79619j9+7dAICamhr09fXh3//939Hf34+mpiZs3LgR77zzDvr7
      +9HS0oLh4WEAQHZ2Nv7hH/4BTqdzDreC5gsGANECk5KSguTkZJhMEyfwSUlJSEtLwze+8Q1o
      mgabzYb33nsPPp8PP/nJT/Df//3fUT/Lgz9FMACIFhhFUaK+PnjwIH7wgx/gH//xHxEOh/HV
      r34VBQUFePXVV3Hv3j20tbXhhRdegKIok36WjE3hA2GIFhZVVREKheBwOAB8OgKor68PTqcT
      8fHxAIDOzk7Y7XbEx8dDURSYTCaEw2HY7fa5XH2aRxgAREQGxVFAREQGtegCgCc0RERfzKIL
      AFVV53oViIgWhEUXAERE9MUwAIiIDIoBQERkUAwAIiKDYgAQERkUA4CIyKAYAEREBjUnARCZ
      t6S3txd9fX36I+4CgQDq6+sxOjqqf+/g4CACgUDUzw8NDWF8fHxW15mIaLGZkwC4evUq3n33
      XVy4cAEXLlzA6OgohoeH8frrr+PevXv4+c9/jq6uLgDAf/3Xf+HIkSP6z46MjOCnP/0p3n//
      /blYdSKiRWNOpoPu6OjAgQMHkJqaqi/76KOPsHHjRmzZsgUFBQX45JNPcPDgQSQnJ2N4eBhj
      Y2NwOp2or69HQUGBftZARESPZ04CoKurC1euXEF8fDxWrlwJn88Hv9+PLVu2AADS09Nx+fJl
      /fuLiopw//59rF69GjU1NVi5ciWam5sBfPrg6whVVREMBmd3g4iIFqA5CYCvfe1rGB0dRV9f
      H9544w28/PLLEELoD6tQFCXqE/7KlStx/vx5FBUVIRAIICkpSQ+Az1IUBS6Xa1a2g4hoIZv1
      ABBCwO12IzExEZmZmejp6UFrayvcbjd6enqQlpaGgYGBqMfWeTweBAIB3L59G8uXL49qT1EU
      WCyfbkY4HJ61bSEiWshm/SJwKBTC22+/jevXr6OiogI3b95EXl4e1qxZgwsXLqC2thanT5/G
      unXrAEB/jN3KlStx7tw5FBcXz/YqExEtSnPyRLChoSFUVVUhGAxixYoVSE5OBgC0t7ejqqoK
      BQUFyM/Ph6IoaGxsRE5ODlRVRUNDA5YsWYLx8XEMDAwgPT19UtvhcDjqjICIFpb/96P/B6Oh
      kZi3+5WVX8WSFH6AfNCieyQkA4BoYftff/tdDI4PxLzdHzz5t9iSuzXm7S5kvBOYiMigGABE
      RAbFACAiMigGABGRQTEAiIgMigFARGRQDAAiIoNiABARGRQDgIjIoBgAREQGxQAgIjIoBgAR
      kUExAIiIDIoBQERkUAwAIiKDYgAQERkUA4CIyKAYAEREBsUAICIyKAYAEZFBMQCIiAyKAUBE
      ZFCWuV4BIpqf3rz2Bk7VHI95uxuzN+N/2/mDmLdLj44BQERTCmshBMKBmLcbUkMxb5MeD7uA
      iIgMigFARGRQDAAiIoNiABARGRQDgIjIoBgAREQGxQAgIjIoBgARkUExAIiIDIoBQERkUAwA
      IiKDYgAQERkUA4CIyKAYAEREBsUAICIyKAYAEZFBMQCIiAyKTwQjonklzZcEVzD2hyaH3R7z
      Nhc6BgARzSsulwPCGo55uxazOeZtLnTsAiIiMiieARDNcx1D7fj/PnldStt/vfvvYTVbpbRN
      8x8DgGieGwuO4WbbdSltC6FJaZcWBnYBEREZFAOAiMigGABERAbFACAiMigGABGRQTEAiIgM
      igFARGRQcxYAQgh89NFH+PjjjwEAmqbhypUr+MUvfoGysjKoqgoAOHXqFCorK/WfU1UVp0+f
      RlVV1ZysNxHRYjFnAdDc3IzKyko0NTUBAJqamlBdXY2vfe1rGBoaws2bNwEAdXV1uHjxIoQQ
      AAC/34/q6mrU19fP1aoTES0Kc3IncDgcxtmzZ/H000/j0qVLAIDq6mps374dDocD27Ztw7lz
      51BSUgKn04mEhAR0dXUhLS0NFRUVWLt2LUZHR6dtP3L2QLQYaJq8u3VVVYWqTP1+0f7nQ1es
      CSHm5D2qaRqPDZ8x6wEghMCFCxewYcMGuN1uffn4+Dji4uIAAE6nE8FgUH9t9erVqKioQGpq
      KlpbW7Fjxw69C0gIgUAgENW+ycRLG7R4qGrsZ8aMCKsqTJi6fSEpeIQQCIen3yZJuQNVUx9a
      14hmPQB6e3tRXl6OXbt24dKlS2hpaUFVVRUsFgtCoRAAIBQKwWL5dNWys7Nx6dIldHZ2Ijk5
      GTabTX9NURQ4HA7963A4HPWzRAud1Wr7/G96THabDTbL1PPkmyVNn2wymWB/yNz8iiKlLKwW
      60PrGtGsHynj4+Pxne98BwAwPDyMlpYWpKSkIBQK4c6dO8jKysK9e/eQlpam/4zdbkdSUhLO
      nj2LPXv2zPYqExEtSrPeV2K325GXl4e8vDzk5OQgMzMTPp8Py5cvx8DAAH75y1/izp072LJl
      CwDA4/EAADZu3IihoSGkpqbCYrHo3UVERPR45rSvxO1249lnnwUA2Gw2vPTSSxgbG4PD4dD7
      8V944QUAQEZGBv78z/8cAJCWlhZ1hkBERI9uXnWWK4oCl8s116tBRGQI8yoAiGj+SPJ6UJCb
      GfN2U31JMW+THg8DgIimZFIUKSOBTCZJw3zokXHAPBGRQTEAiIgMigFARGRQDAAiIoNiABAR
      GRQDgIjIoBgAREQGxQAgIjIo3ghGC9Lg+AAGxgZi3q7dYkdqAueZImNgANCCVFp7Fr+58euY
      t7sibSX+j6f/IebtEs1HDACiR/CzT/4bvSM9MW9337JnsDZzXczbJXoYBgDRI6jouI22gdaY
      t7she2PM2yT6PLwITERkUAwAIiKDYgAQERkUrwEQzXMWixlJiW45jSucm9/IGABE85zZbEaS
      1yOlbR7+jY1dQEREBsUAICIyKAYAEZFBMQCIiAyKF4EXkbvdNbhY/2HM2/U4E3FozYsxb5eI
      5hYDYBFp6W/GqZoTMW83y5PNACBahNgFRERkUAwAIiKDYgAQERkUA4CIyKAYAEREBsVRQDRj
      r5b9M2q778a83f/ruX+C1+WNebtENIEBQDM2HBhC/1hfzNvVhBbzNonoU+wCIiIyKAYAEZFB
      MQCIiAyKAUBEZFAMACIig2IAEBEZFAOAiMigGABERAbFACAiMijeCUwLlqIoC6JNovmKAUAL
      kjfRjaL87Ji3m+lOiXmbRPMVu4CIiAyKAUBEZFDsAiJ6BC6nA3EhZ8zbtVr4VqTZx786okeQ
      kuQFnMGYt+t02mPeJtHnYRcQEZFBMQCIiAyKAUBEZFAMACIig2IAEBEZFAOAiMigZn0YqBAC
      ly9fRk1NDYQQyMzMxN69eyGEwIULF9DY2IiUlBTs27cPNpsN77zzDvLy8rBx40YAQDgcxuHD
      h1FUVIT169fP9uoTES0ac3IGkJKSghdffBFf//rX4ff70dLSgrq6OvT09OBb3/oWHA4Hrl27
      BgDw+/24fv06NE0DAHR1daGzsxNtbW1zsepERIvGrJ8BKIqCgoICAEB/fz+Gh4fh8XhQXl6O
      zZs3w2azYcOGDThz5gy2bt0Km82GxMREdHR0IDMzExUVFVi7di0GBwenrREKhWZrc+YVVVWl
      tCuEeOg+FZqQUldVw9PW1VRNSs3P3VbI2VZN1aatq4bDUmoCE2fU0KaeAVWT9HsV2sP3saRd
      DFVVDXtsmM6c3AkcCATwi1/8Aq2trdizZw/cbjeCwSCczolb7B0OR9Qvas2aNbh9+zbS09PR
      3t6OJ598EhUVFQAm3rCBQED/XiEEzGaz/vV/XnwN11uvxnwbnirej5fWfmPK14JqEN///Z/F
      vCYA/O9PvYLcxLxpXpX0zsHEfp32NYk1p6sr60As8PBtlbWxAg/Z1oetz0zrzsE+jtSdbQ/b
      x0Y1JwFgt9vxJ3/yJxgZGcGJEydQV1cHm82mH8iDwSCsVqv+/ZmZmSgvL0dLSwvS09NheWDe
      FEVR4HA49K/D4XDU66pQEVA/DYhYERCw2WxTvxYWUmoCgNlsnrau2Szn16koyrQ1AcBkkjOH
      vsVifci2mqdcPlOmz9lWWc8LeNjv1RK0Trk8FqxWK6zmafaxSU4PsWJ6+D6GpEcyWMyWh9c1
      oFm/BhAOh9He3g6z2Qy3242MjAz09vaioKAAN27cAABUVlYiMzNT/xmr1YrU1FScOXMGa9eu
      ne1VJiJalOZkFNClS5fQ29sLi8UCl8uFQ4cOQVEU1NXV4Wc/+5m+DAAyMjKgKAo2bdoEv9+P
      lJQU9PX1ISkpabZXfd4zm01wOGI/qZjdJu8TKBHNnVkPAKvVikOHDiEcDkMIAYvFop9WP/fc
      cwiFQrBarfqy/fv3AwB8Ph9efvll/f99Pt9sr/q8F+dyIjsjNebtpjiTY94mEc29OZsO2jLF
      /Oef19dMRESxw+cB0IzZ7Ta4nI7P/8ZHZOID2omkYgDQjPm8iRg2x/5h6iYzZyohkmlG7zAh
      BO7du4fx8XG0tLTg9ddfR3Nzc6zWjYiIJJpRAIRCIbz22msAgNdeew0ulwuvvvoq77YjIloA
      ZhQAmqbBYrGgp6cHgUAAX//612E2mxkAREQLwIwCwGazIS8vDz/60Y+wa9cu+P1+OByOqDtz
      iYhofprxReA9e/bg5ZdfRmJiIsbHx/H3f//3MEm6hZyIiGJnxl1Ar732Gjo6OqAoCpxOJxIS
      EmK1bkREJNGMAsBkMuHll1/GT3/6U1y+fBmVlZWor6/njHtERAvAjLqANE3D9evXkZiYiMOH
      DwMAsrOz8b3vfU/abI1ERBQbMwoAi8WC73//+/D7/eju7kZaWhq8Xq+0KXOJiCh2ZhQAQgi8
      9957ePfdd+Hz+dDd3Y1vfOMb2LdvH0OAiGiem1EAjI+P4+jRo/iXf/kXeDweDAwM4Ic//CF2
      7NgBl8sVq3UkIiIJZjxeUwihP7BdVVVeACYiWiBmdAbgcDjwzW9+E3/9138Nl8uF0dFRfO97
      39Of7UtERPPXjG8E27JlC0pKSjA0NASPx8ObwIiIFogZTwb3yiuvwOVyIScnB263Gz/+8Y8x
      NjYWq/UjIiJJHvsMoK+vD8eOHUNzczN+85vfwGw2Y2BgAEIIWK18hiwR0Xz32AGgKAosFgvM
      ZrP+36ysLLz44osMACKiBeCxA8Dj8eBrX/satmzZgvz8/Khx/0II3gdARDTPPXYA/Od//iee
      fPJJHD16FO3t7fry3Nxc/NVf/RWngiAimuceOwAOHDiApKQkfPvb30YwGNSX2+12jgQiIloA
      HjsAcnNzIYRAa2srcnNz4ff7cfLkSTz99NPs/iFaBNIS0rEydWXM282Oz4l5m/R4ZjwM9D/+
      4z9gMpnw2muvwev14l//9V/5SEiiRcBmtiHeHh/zfw4Lnxg4X8TkmcBdXV0IBoN48cUXYbFY
      GABERAvAjJ8JXFBQgB/96EfYvXs3uru74XQ6+UxgIqIFYEZTQZhMJvzFX/wF/viP/xgulwuB
      QAA//OEPeRGYiGgBeOwAePPNN7Fp0yaUlZXB7/fryzMyMvCHf/iHHAZKRDTPPXYArFixAl6v
      F5s2bcLo6Ki+PD4+3vCjgBRFQW52upS2bTbeZU2L28rUlQio4zFv1+Nwx7zNhe6xA0BVVdTX
      12P9+vWwWGY8qeiiogCwSZoOw+jhSouf3WKHIqEX2WRir8RnPfaR22Kx4K233sKrr76K4uJi
      7Ny5Exs2bEBiYiIPUkREC8BjB8DatWuxZs0aDA8P4+7du/joo4/wm9/8Bnl5efjbv/3beTMh
      XIrPizxkxLxdbyJPJ2l2OK1OrMtYJ6Vtk4yP2rRgzLjvxul0wufzwefzwWq1oru7e149FtJs
      NsEqoYvKzJFONEtMUGC32Od6NWgReuwj471793DkyBHcuHEDCQkJ2L59O/7u7/4OOTk57AIi
      IloAHjsA2trasHTpUnz7299GUlISh30SES0wjx0Au3btiuV6EBHRLGNHNhGRQTEAiIgMigFA
      RGRQDAAiIoNiABARGRQDgIjIoBgAREQGxQAgIjIoBgARkUExAIiIDIoBQERkUAwAIiKDYgAQ
      ERkUH+ZL9AgSnYnQlHDM23VYHDFvk+jzMABoQUp0JKLAWxDzdtPjHv740JzEHHhDnpjXddsT
      Yt4m0edhANCC5LK5kBKfEvN2PfbEmLdJNF/xGgARkUHNSQCMj4/j0qVLOHbsGKqqqvTldXV1
      OHr0KCoqKvQHy1+7dg0tLS369wghcP36dTQ3N8/6ehMRLSaz3gUkhMDx48eRk5OD1atX49y5
      c0hISIDFYkFpaSkOHjyI0tJSmM1mLF++HOXl5XC73fjOd74DRVHQ19eH0tJSrFixAjk5ObO9
      +kS0CI2HxuEf6Y55u3G2eHhd3pi3Gytzcg3g4MGDsNlsEEIgIyMDIyMjaG5uxs6dO5Geno69
      e/eivLwcy5cvR0JCAqxWK/r7++H1elFTU4NVq1ZB07Rp24+cPcgkIKatI7W6mL6uzMKzsU+n
      KPqQbZW1Pg+pOfGypKrT72OZe/5hdWWab39Pd7tr8H+f+z9jXvLLS/fhT7/0v8S83ViZ9QBQ
      FAU2mw3hcBilpaXo7+/H0qVLUVVVBa93IindbjfGxsb0n1m1ahUqKyuxfft21NXVYcuWLait
      rQUw8YcUDAb179U0DaFQSP9aVVUp26GGVYyPj0/5WkgLTbk8FgLBwPR1Q3LqakKbtiYAqA8J
      45kYDwRgE9Nsazj2QzGBib+fh22rJuRsaygUmrZuIBSQUhOY6I41K+YpXwtL2seqNv17B5CX
      7cFgCOOmqes+eAyJpbD68G2da3NyBjA2NoZf/epXWLZsGb785S/DZDLBbDbrB2tVVWE2f/pH
      WVhYiCNHjmD58uWIi4uDy+WKas9ms+n/Hw6HYbVa9a8fbCeWLBYLnE7n1K+pcmoCgN3umLau
      1WadcvlMmRTTtDUBwGyScynJ4XDAaZ9mW4OSttVkfui2mkwmQMJnCpvVOm3doGlsyuWx4HQ4
      YDZNfRiwjMk5PJg/Zx8rCqSc9tjstmnr2u22KZfPlMU8/XFiPpj1i8BCCBw7dgwbN27E9u3b
      9QN0Wloa6uvrAQBtbW1ITPx0OJ7T6YTdbsdHH32E1atXR7WnKMqkf0RE9Plm/QwgFAqhpqYG
      Y2NjuH37NgBgx44dWLNmDX75y1+ivb0dHR0d+OY3vwkA+gG9pKQEv/rVr7B//350d8f+Yg0R
      kdHMegBYrVb88Ic/jFpmMplgMpnw3e9+F319ffB4PLBYJlbt5ZdfhslkQkFBAX784x/DZDIh
      MzMTGRkPv2OTiIgebk4uAkcO7p9lNpvh8/kmLZvq/9nVQ0Q0M7wTmIjIoBgAREQGxcngaMZS
      4lMQVmI/Vt1skjeclogYABQDyS4fFHPsb5Ca7gYlIooNdgERERkUA4CIyKAYAEREBsUAICIy
      KAYAEZFBcRTQImJWzLCZYz+rodUsZ+ZNIppbDIBFJNmVhPWZ62PebrzVHfM2iWjusQuIiMig
      GABERAbFACAiMigGABGRQTEAiIgMigFARGRQDAAiIoNiABARGRQDgIjIoBgAREQGxQAgIjIo
      BgARkUExAIiIDIoBQERkUAwAIiKD4vMAJDErZintKlJaJSIjYgBIYFJM2Ji9UUrbLqtLSrtE
      ZDwMACIyPJvVCl9yYszbTYif3x/YGABEZHgWsxmJ7oSYt+tw2GPeZizxIjARkUExAIiIDIpd
      QEREBnKl+RP84vLPADAAiIgMJRAOwD/SDYBdQEREhrXozwBsZjucFmfM27WarTFvk4hoNi36
      AMhLzIXdHvsTnYyE9Ji3SUQ0m9gFRERkUAwAIiKDYgAQERkUA4CIyKAYAEREBsUAICIyKAYA
      EZFBMQCIiAyKAUBEZFAMACIig2IAEBEZFAOAiMigGABERAbFACAiMigGABGRQc1ZAAQCATQ0
      NEQt6+npweXLl9HR0QEhBACgqakJ/f39+vcIIdDc3Iy+vr7ZXF0iokVnTgKgpqYGr7/+Ot5+
      +219WX9/P9566y1YLBYcOXIELS0tAIC3334bx48f1wNheHgYb7zxBi5evDgXq05EtGjMSQA4
      HA5897vfhdfr1ZfduHEDO3fuxIYNG/Dcc8/hypUrAICkpCSEw2GMjIwAAO7evYsVK1bMxWoT
      ES0qc/JIyLy8vEnLBgYG9AO71+vF2NiY/tqyZctQU1ODjRs34t69e1i7di3q6+sBTHQJhUIh
      /Xs1TUMwGNS/VlVVyjaEwmGMjo5O+Zoq5NQEgPHAOKzq1HWDwdCUy2dK07Rpt3XidTnbOz4+
      BjHNR5QHf+expGnq52yrJqVuMBiatu54eFxKTQAYHRuDWTFP+Vo4HJZSU1Ufvo//52Q/5oKB
      AEYxdd1AICClpvqQ48RceXBb580zgRVF0bt5xGf+AoqLi3Hq1CkUFxdDURS43e6o183m6D9g
      h8Px6WvDU/9xz5TVYoHL5ZryNVWT88YBAIfdAZd96ro2Vc6D6k0m07TbCgCmQTn72OFwwmmZ
      uq41JGtbzQ/f1n4TICHvbDbrtHVDAXkB4HI6YTZNfRiwjMs5PJjND9/HigJAQgjY7PZp69oD
      9tgXBGB+yHFirtjtdiiKAmAeBYDX60VHRwfS09PR09OD+Ph4/bX4+HgIIXD16lWsWrUq6ucU
      RYkKgM+GBxERfSo+zoWi/GwAc3ANQNM0XLt2DWVlZejs7ERZWRkaGhqwbt06XLx4EeXl5Th5
      8iQ2bdoEYOIArygK1q1bhw8//BCFhYWzvcpERIvSrJ8BKIqCrKwshEIhFBUVAQDcbjfcbje+
      9a1vobm5GS+++CKSk5MBAF/5yldgNpuxbNky/Nmf/RkcDgdSU1OxY8eO2V51IqJFZU4CIC0t
      bcrXPB4PPB5P1LKkpCQAE/2GKSkpAACr1QqrVU4fMBGRUfBOYCIig2IAEBEZFAOAiMigGABE
      RAbFACAiMigGABGRQc2bO4GJiIzm3y78C4SEeS9eWvcNZHqyPvf7GABERHPk48aPpLS7f/lz
      yMTnBwC7gIiIDIoBQERkUAwAIiKDYgAQERkUA4CIyKAYAEREBsUAICIyKAYAEZFBMQCIiAyK
      AUBEZFAMACIig2IAEBEZFAOAiMigGABERAbFACAiMigGABGRQfGBMEREcyQvO0NKuw6b7Qt9
      HwOAiGiOWK1yDsGKonyh72MXEBGRQTEAiIgMigFARGRQDAAiIoNiABARGRQDgIjIoBgAREQG
      xQAgIjIoBgARkUExAIiIDIoBQERkUAwAIiKDYgAQERkUA4CIyKAYAEREBsUAICIyKAYAEZFB
      MQCIiAyKAUBEZFAMACIig2IAEBEZ1LwJAFVV8cEHH+DnP/85Tp48iVAoBAA4fPgwbty4EfV9
      hw8fxq1bt+ZqVYmIFoV5EwANDQ1oa2vDt771LZhMJly/fh0A0NHRgStXrkAIAQDo6upCc3Mz
      Wlpa5nJ1iYgWvHkTADU1Ndi6dStsNhs2bdqE+vp6AIDdbkdycjI6OjoAABUVFVi3bt1crioR
      0aIwbwIgGAzC6XQCABwOh94FBABr1qzBnTt3oGka2trakJOTM1erSUS0aMybALBarQgGgwAm
      wsBqteqvZWZmor29HW1tbUhLS4t6jYiIHs+8CYD8/HzcvHkTAFBdXY2MjAz9NZvNhpSUFJw5
      cwZr166dq1UkIlpU5k0ALFu2DKqq4uc//znq6+uxZcsWAEBqaioURcGmTZtgMpmQkpICm82G
      xMTEOV5jIqKFzTLXKxBhsVjwla98BcFgEDabDYqiAACee+45AEBKSgr+6I/+SP//lJSUOVtX
      IqLFYN4EAAAoigK73T7Xq0FEZAiKiAywX6CEENA0Tf9aVVU8uEk9410YU0diXjfe6kGiLWnq
      dYJA60hDzGsCQJozC1aTbcrXRsJD6Av4Y17TYrIi3Zk97evdY+0IaOMxr5vhyoVZMU/52lCo
      HwPBvpjXtJsdSHFkTPt6x2gLwiI07euPy2v3Ic6SMOVrIS2IzrHWmNcEgKy4fChQpnytP9iL
      4dBAzGs6zXFIdqRO+3rbaBM0oca8brIjDU6za8rXhoKDuNdfE/OaPmcKchLyp339RtdlyDgA
      F3tXIM4aP+VrfeM9aBisA7BIAiAcDkd9bTab9S6k2aKqKszmqQ9Wi62upmlQFGVW93Ek6I2w
      rcDc/F6FEBBCwGSa3UuDRnrvzLdtnVddQI9DUZSoYaHhcFgPgdn02aGrsyFyUJztuqqqQlGU
      WT1QaJo2JwencDgMi8Uy63Xn4u8pcvY829saCoVgNpsNsY+DwSAsFsucfHiaalvnzSggIiKa
      XQv+DOCzZvtTRITFMje7ci7qmkymWe8SURRlTk6d56I7EZib3+tsn9VFzPYn4gdslkAAAB4s
      SURBVAfrGqEmgGnfO+ZXXnnlldldFbli1V97+/ZtJCUlfeGDzqO+cQYHB/HJJ59AVVUkJiZC
      URSEw2HU1tbC5/N9oTYe9Q0rhEBraytqamqQkpKCrq4ufPDBBwCApKSkL7zfHjUAIt03kX8X
      LlxAbm6uvg1fxKNu6/DwMAKBAOx2OzRNw61bt1BVVQWPx6NPOfJFPOq29vf36we0trY2vP/+
      +2hubkZ6evojdTc8yrZGZtL1er2w2+2P/ff/OH9P9+/fR319PXw+H6qqqnD58mV4PB7Ex099
      AXIqj7qPhRBob2/HzZs3UV1djZ6eHsTHxz/ytj/qezYYDOLOnTu4ffs27t27h56eHrjd7qhh
      61+k5kyPT0II3Lx5E+np6V/o+x/2ezV8F1Ckf+yz/9rb26NGF8Xa6dOnUVhYiHv37qGqqgrA
      RH/z/fv3pdXs6+vDJ598gsTERJSWluLjjz/G9u3bUVlZicHBQWl1f/nLX+Ldd9/V/126dAnv
      vvuu1G1tbW1FU1MTgIkw7+3txbJly3D8+PGoeaZiKRJumqYhGAyirKwM+/btw5o1a1BaWiql
      JjARAE1NTfjggw9w/Phx9Pb2YjbGdkQ+TMTHx+PYsWMYGRnB9u3b8f777yMQCEir+/HHH+Pq
      1avIzc3F6Ogo4uPjcebMGdTUxH4UT0QgEMBvfvMbKIqCkpISbNmyBUlJSTh69Ci6urqk1Z3q
      2KSqKtra2mLS/qLrAnpUFy9exK1bt5CaGj0srbe3V1pNVVVhtVqRlZWFjIwM/P73v0dqauoj
      fWp6HF1dXVixYgWWLFmCxsZG5OTkwOPxYMmSJejs7ITH45FSt6CgAKFQCFu3boXD4cCxY8dw
      4MCBWetuqK+vx/PPPw+TyYSlS5eis7MT2dnTD2udKZPJhNHRUaSkpMDpdE6a3FAGr9eLAwcO
      oL+/HxcvXoQQAiUlJUhPT5fWvdLQ0IBt27bB6/Xi1q1b2Lx5M0wmE7KystDb2xs1nUusqKqK
      jo4OHDp0CIqioLe3Fw6HA4cOHcKRI0ewfPnymNcEJo4HhYWFUVPReL1exMXFoba2FmlpaVLq
      /uxnP0NcXBxstuih37F67xg+ANatW4eOjg688MILUW+UM2fOSKtpMpmgaRpGR0fhcrnw1FNP
      4eTJk9i2bZu0mgAQFxeHlpYWKIqC7OxsuFwTY6IHBwelHhB37tyJ9vZ2nD17Vn8Dye7PN5lM
      qK2thcViwdjYGBRFgRACAwMDWLZsmZSaiqIgNzcXH374IVatWoXx8XGMjIygurpa39cyKYoC
      r9eLZ599Fn19fbh27RrGxsZQWFgopV5qaipqa2uxdOlS/ew1NzcX3d3d2LBhg5SaJpMJJpMJ
      w8PDcLlc6OzsRFZWlvQPE263G3V1dVi6dCncbjcAYHx8HFeuXMHq1aul1d21axf8fj+2bt2q
      H580TcPJkydj0v6iuwbwqGw2G+Lj4xEXFxf1RxQOh5GcnCzlD0tRFCQlJWF4eBgejwcOhwN5
      eXn6mYiMT04AEB8fj/7+fqSlpcHn88Hj8UAIgbq6OqxYsULaQVlRFCQkJGDp0qWoqalBc3Oz
      tANEhMfjQWJiIkZGRhAXF4fs7GyEw2H09vZiyZIl0uqmpaVBCIFbt25hcHAQra2tcLvd2LZt
      m7SDlBAC/f39eogrigKn04nCwkL9+pIMXq8XjY2NqK+vx969e3H37l3cuHEDK1asQFZWlpSa
      iqIgIyMDpaWlqK6uRmpqKoqLixEMBuF2u6XNEWaz2ZCdnY0rV66gqqoKtbW1aG5uxpo1a1BQ
      UCBtH0e2x+PxRNUIh8MxmQ5nwd8IJktnZyd8Pt+sjjwRQqCzs/MLX9yJVc3+/n44HI5Hujg6
      k3qRfz09PZO63mTX7unpgcfjkT7++7Nvq46ODmnBHqn12YNQIBDA8PAwkpOTpdSdbj38fj+8
      Xq/UES8P7t/I2Z3MfQxMXATu7e2NOi4EAgFomibtDE/TNHR3d8PtduvvT03TMDg4GJOwM/xF
      4OncunUr6g7j2SCE0B+FOVsURUF9fT36+/tnrZ7JZEIwGMTt27dnpeaDtaurqzE6OjortR4c
      kSbz9zrdyLehoSHcu3dPWt3p1qOyshLj47GfGmSqWpHtlv3eCYVCOHr0KGpra3HkyBEEAgEo
      ioLm5mbU1dVJq1tWVobKykq899576Ozs1Nflo48+ikn7hr8GEBke+NlPK729vdi1a5e0uocP
      H0YoFIp64wohpE6G5/f7cebMmUkXlDo7O/HCCy9Iq/vWW29N2r/hcPgLD3d9HK2trbhw4cKk
      bW1ra8OaNWuk1b1w4QI6OzujunuEEFJDJxwO47e//e2kbR0bG8PSpUul1a2rq8OlS5em/Hva
      uHGjtLpnzpzBwMDApPeOzA9s/f39SElJwc6dO9HQ0ICysjI8/fTT0uoBE5/0BwYGcOjQIYyM
      jOC9997DoUOHAEw+w3xchg+AtLQ0tLW14ZlnnolaLvMiMDDRf5qTk4OCggJ9maZpOHXqlLSa
      iYmJMJvNeP7556O6QK5duyatZqTu+vXro0ZKjI2NxexTzFRSUlJgNptx6NChqG68Dz/8UFpN
      YOLCqN1ux5e+9CV9mRACJ06ckFbTbDbD5XJh9+7dUSO5/H6/1KG2GRkZsNlseOGFF6ICr6ys
      TFpNYOJ3m5qaGvVs8FheGJ2KzWbD2NgYACAvLw8tLS24evWqfkFYhsi9QZqmIS4uDlu3bsXJ
      kydjGjyG7wJKTU2F2+2eNEzP5XJJvTtx48aN8Psnz9wpc7SIxWLBhg0bJo1bttvtUq91fOlL
      X0JHR0fUMkVRpG6rzWbDypUrJ3VtORwOqSNGli1bhlAoBFWNns1S5rYqioInnngCLS0tUcvN
      ZrPUM0qHw4H8/HyMjIxMWi5zH69ZswbDw8NR9+nI/ntyu9366KPI/g4GgygvL5d2PUlRFKxc
      uVK/vyE3NxerVq3C4cOHY/Z+NfRF4I6ODgwMDKCgoABWqzXqgK+qqrQpDyoqKuDz+SZdZJY5
      42Wkz33ZsmWIi4uL2i5ZM15qmoY7d+4gKysLXq93UreIrG0dGRnB3bt3sXz5cjgcjlnZVmDi
      foPIOPgHp5CQua2qquL27dvIy8uDx+OZtI9lTe7W39+P5uZmLF26dNIduDLfO7W1tXA6nUhP
      T5+1fRwOh3H79m0UFhYiISEhan9GunFlXPCuqqpCYmIiUlNTo/anqqpQVXVS19vjMHQAqKqK
      uro6NDQ06DcJZWdnSx9TPDo6isrKSvT09CAhIQGrVq2SdhPWgzo7O1FVVYVgMIjMzEwsW7ZM
      +miY4eFh3LlzBwMDA/B4PFizZg3i4uKk1hRCoK2tDTU1NQiHw8jJyUFxcbH0EV2hUAg1NTVo
      a2uDzWbDihUr9EeayjQwMICKigoMDQ0hOTkZK1eulH7fgaZpaGlpwd27dyGEQH5+PoqKiqS/
      dwKBAKqrq9HR0QGn04mVK1dKvZYU0dvbi8rKSoyMjCA1NRUrVqyAw+GQWnNsbAyVlZXw+/2I
      j4/HypUr4fV6Y1rD0AEQIYRAIBDA3bt30dLSgsTERCxduhQ+n0/qm1fTNPT396OiogIjIyPI
      yspCYWGh1O4nIQRUVUVLSwtqampgs9lQUFCA7OxsqcP2VFVFX18fbt++jVAohOzsbBQUFEz6
      hB5LkQuDjY2NqK2thcvlQmFhITIzM6WGgRACIyMjqKqqgt/vR0pKCoqKiqSOyQcm9rHf70dF
      RQVUVUVubi7y8/OldgMJIRAMBtHQ0IC6ujrEx8ejqKgI6enpUsNACIGhoSFUVlair68P6enp
      KCoqQkJCgtS/J03T0NHRoU/fkp+fj9zc3Jh8Gp9O5GJwZWUlhoaGkJmZicLCwkln8o+DAfAZ
      Qgj09fWhtrYWPT09yMrKirrYJEsoFEJbWxvu37+PcDiMNWvWSB3TDHw6OqW+vh7Nzc1wu90o
      KSmRfj9AMBhES0uLPnxu3bp10p/xHBk73djYiNbWViQnJ2PDhg1S37iRul1dXbh37x6Ghoaw
      ZMkSqSNzIgKBAJqamtDQ0ACz2YwNGzbE/NPjZ0XutK6rq0NHRwdSU1Oxfv166TNgRqaHuH//
      PkZGRrBixQrk5+dLrRn50NjQ0ICmpibYbDaUlJRIvSgMTHRHRY4TwWAQq1evntFNd4YfBSSE
      QFNTE27evIlgMAgAyM7OxsaNG2E2m/Wxt7JZrVbk5OSgo6MD69evx9DQUMxrRO5QbWhowBNP
      PIGUlBTExcXB6XTq01DI+DzQ1dWFq1evYv369YiLi8O5c+cQHx+PPXv2IBQK6aMrZOrv70dj
      YyM2bNiAtWvXSpswrampSb8GMDAwgNLSUsTFxWHXrl2wWq1TXvifqcjsmBkZGdA0DRcuXEBf
      Xx98Ph/27t2L8fFxKXMRNTU1oba2Ftu3b9fP5BITE1FSUgIhBLq7u6Xs40AggPPnzyMjIwPF
      xcU4efIkrFYr9uzZA7vdjp6enpjXjNS9cuUK2tvbAUyMgiopKcGyZcswPDwsZVtVVcXNmzdR
      X18PIQQsFgtWrVqF3bt3IxQKYWBgZo/sNPwZwJ07d1BfX4/du3fD5XJB0zTcv38fN27cwB/8
      wR9I+/TS19c3aaSIEAKXL1/Gc889J6Vme3s7KioqsGPHDhw+fBj79u1DUlISLl68iPz8fGln
      HG+++Sb279+PCxcuwGKxYPv27ejp6YHf748aLhlLd+/eRWlpKZKSJp7bPDY2hv7+fmRlZeHA
      gQPSznLee+89PP3007BYLPjtb3+L/fv3Y2hoCDdv3sTBgwel1BwbG8P58+fx7LPPoqKiAqOj
      o9i0aROqq6sRCASkTbtx8+ZNDA0NoaurCx6PB5s2bYLb7ZZ+zeO9997D5s2b0d7ejurqahw8
      eBDDw8O4du2atPdOZDbQrVu3IiMjA2VlZVi1ahXKy8tx4MABKVNQCCFw5MgRZGdnY+3atfoN
      lOXl5XC5XHjiiSdmXMPwZwAtLS3Ys2ePPhOn2WzG8uXL0djYiNHRUWmndEeOHEF6enpU/+xn
      H3AfawMDA8jMzITD4cD+/ftx9uxZfPWrX5VWD5j4BONyueD1erF582aUlZXB4/HA5XKhurpa
      Wt1I/3dKSgrWrVuHvr4+3L9/H1u3bpVW80GBQAAJCQnweDzweDy4fPmytFqRUTfAxJnO0qVL
      YTKZkJ6ejps3b0qrC0x8Cn7iiSfQ0dGBsrIyOJ1ObNy4EV6vV0oQREY2paWlweVyobW1VZ/L
      S+bNdr29vSgqKtK774LBIPLz82EymVBdXS3l7ypyY1tJSYm+L51OJ/bu3Yvf//73Malh+PsA
      srOzUVpaisHBQWiahlAohIqKCvT390sdSfHEE0/A4/Fg9+7d+r8nn3xS6sXJ9PR0/VQyMTER
      69atw9GjR6V0N0WYTCZ9vhSfz4fCwkIoioLh4WGpoygiIRcfH4+jR4/O2hz5oVAI58+f16e5
      UBQFwWBQ6gXRyJnr5cuXkZKSgpaWFnR0dODUqVMoLi6WVjfCZDIhMzMTzz//PNasWYOrV6/q
      3amxFhnC297ejtraWgwODmJ4eBgdHR1S368JCQno6uqCqqr6sQKA1OePRx4sdOXKFQSDQWia
      hpGREZw9exaZmZkxqWH4LiAhBFpaWnDz5k192uDc3FyUlJRIvXilaRr8fn/UZGhCCNTX10ub
      vheYuH0/chYATNwtevXqVWzbtk3a2U5dXR2ys7OjLrhWVlYiLS1tViYqC4VCOHXqFNLT07Fp
      0yaptYQQGBwcRFdXF1wuF7KystDR0YFwOCx1ym0hBGpqanD37l0EAgEkJSWhpKRE6oXfpqYm
      OByOWZ3QD5g4uyorK0NGRgaWLl2KEydOwGazYc+ePVJDoLm5GRcvXoTdbsfOnTuRlJQEv98P
      l8slrW7kPo/79+9D0zTYbDasXr1a/yA1U4YPgOk8eDFvtggh0NjYKH0Ew2d1dXUhLi5O+vj8
      B4XDYbS3tyMnJ2dW6kW61zo7O5GcnCx1aORUtefi9zo2NoaBgYFZnV0WmJiHKTU1Vfo9Jg+a
      q308ODiIUCgk7YNMZHRgpCtRUZQpPzw+LsN3AU33SMjITUSyTFVT0zR9fLEM021rc3Oz1EdC
      TlUzGAzi7t270mp+dluFEFAUBffv35c6U+VU+1gIgYqKilmtqWkahoeH0djYOOt1a2trpT4S
      crq6lZWVs16zt7dXHxUko2ZpaSna29tx7tw5faqPUCgUs2tKhr8IfP36ddy9e3fSqBAZw/Ue
      9Pbbb096mLTM/kRgYptOnDgx6a7jjo4OPP/889LqvvHGG5Nu0AmHw9Ie3gFMXNw/f/78pG1t
      bW2NeqxfrJ07dw4DAwOTug9lBqyqqnjjjTcm7c+xsbGoyQZj7f79+/j444+RkJAQtby9vV1q
      V9vx48cnXVeJjMuXZXR0FG+//fakfTwwMICSkhIpNYUQGB8fx/79+xEIBPDuu+/iK1/5SkyP
      EYYPgMjMfgcOHIhafu7cOal1c3Nz4fF4oi7SaZqGs2fPSquZlJQEh8OBffv2RXWByH4GQWZm
      JpYsWRLVBz42NoZLly5JqxmZqXL//v1RXRHl5eXSagJAUVERGhsbsXPnTn2ZEELqLK9msxk+
      nw+bN2+O6orw+/1oaGiQVjcnJwdXr17Fs88+G3VQunDhgrSaAFBYWIj+/n5s2bJFXyaEwOnT
      p6XVdDqd+r0rD3aVNjU1TZoML1Yis4GGQiHY7XY8+eSTOHHiBJ566qmY1TB8F1BSUhJycnL0
      iaQi/z47sVasrV+/HqFQKKpmpK4sZrMZW7duxeDgYFTN+Ph4qf21W7ZswcjISFRNq9Uq9a5J
      i8WCjRs3YmxsLKqu2+2WepaVn5+vfyJ+sK7Msx1FUbB9+3b09/dH1bTb7VKv69hsNqxZswbB
      YHBW3zvLli3Tz55n671jMpnw5JNPwu/3R9WU+SQ9RVGwfv16/Y75tLQ0fOlLX8Lp06dj9n7l
      RWAiIoMyfBfQ+Pg4ysrK0NvbC5PJpE+fu3XrVuTm5kqr29bWhvLycqiqql/Zd7vd2Lt3r7RP
      FEIIXLlyZdJDQoqKirBp0yZpd3DW19fj8uXL+lTMmqYhKSkJe/bskTYXj6Zp+Oijj9Dc3Kz/
      XgFgxYoVUud2GhwcRGlpKcbGxmAymaBpmj5sUNZ8R0II1NbW4vr16/rFbiEEUlNTsXPnTmln
      d6qq4sKFC+jo6ND3saIoWLt2LVasWCGlJjBxF31paak+FXPkmby7du2SNuxVCIHKysqo+zuE
      EMjKysK2bdukDRnv7OzEBx98gHA4rG9rpCsqcvPqjAiDKysrE1VVVUJVVSGEEJqmiZGREfHm
      m2+K0dFRKTVVVRW//vWvxcDAgL5M0zTR2Ngojh8/LqWmEEI0NDSI06dPi2AwqC8LBoPixIkT
      oqmpSUrNcDgs3njjDTE8PKwvU1VV1NTUiNLSUik1hRCisrJSfPDBByIUCunLAoGAePfdd0V3
      d7eUmpqmicOHD4u2tjahaZq+rKenR7z11ltSagohxNjYmPj1r38txsbG9GWqqoobN26Ijz/+
      WFrda9euicuXL4twOKwvGx8fF7/73e9EX1+flJqaponf/va3wu/3R+3jjo4O8c4770ipKYQQ
      fX194ne/+50IBAL6snA4LC5evChu3rwppaaqquKtt94SfX19Udva3Nwsjh49GpMahr8GMDY2
      hrS0NL3PUlEUOJ1OxMXFSRsGGrmh47OjJ9LS0qROjDY6Ooq0tLSoTysWiwVpaWnSLmSpqgqn
      0xl1o4yiKMjIyJBWE4A+be6D/f1WqxU+n0/qlAGqqkZNI64oivRnPYTDYSQkJERd2J+tfZyV
      lRXV32+z2eD1eqUNtRX/cyb34FQTiqIgOTl50txasRS5ue7Bs6nIdBuy9nHkumRk/H9Eampq
      zEY8Gf4agN/vx8mTJ5GZmYmkpCQEAgG0tLQgNTUVO3bskNYtcvnyZdTV1SEvLw8Oh0N/wtJT
      Tz0lbVK2UCiEI0eOwOl06s/n7ezsxOjoKA4dOiTtNPbChQvo6upCTk4O7HY7ent70draiuee
      e07aDTSBQADvvPMOvF4vUlNToWka2tvboWkann/+eandXeXl5cjNzYXb7cbIyAiam5uxatUq
      aQ+jF0Lg7NmzGB4eRlZWFqxWK3p6etDZ2YmDBw9KC6DR0VG88847SEtLg8/nQzgcRmtrK+x2
      O5555hlp+7i6uhpXr15FXl4e4uPjMTQ0hObmZmzatEna1BeqquLkyZPQNE1/Gpnf70dPTw+e
      f/55aRfbr1+/jurqauTn58PpdOpTmu/evTsmN1EaPgCAiYmdenp6MDg4CJvNBp/Ph/j4eKmz
      Gor/mYu/u7tbnzgsOTl50r0BsaaqKgYGBvQpc5OTk+HxeKQ/IGV4eBh+vx/BYBAejwdJSUnS
      5+IPh8Po7+/Xr+9EtlX2U6vGx8fh9/sxPDwMl8sFn88Hp9Mp/e9pcHAQPT09CIVC8Hq98Hq9
      0u/GDYfD6O3t1Ucg+Xy+SY9NjDXxP+Pju7u7MTo6iri4OPh8PqkPFwI+faaE3++HqqpISkqC
      1+uVOmXMg8eJ8fFxJCQkwOfzxew4YfguoMj0qrdu3UJubi4KCgqQkJCAmzdvSr0TuLu7G+fO
      ndNnb8zMzITJZMKtW7ek1RRC4M6dO/jggw/gdruxZMkSJCUlob6+ftLD02OptbUV58+fx+jo
      KIqLi5Geno5wOCz9zs1r167h448/RnJyMoqKiuD1elFdXS21C2hkZATnz59HXV0dlixZgtzc
      XDgcDqn3Wggh0NDQgPfffx+qqqK4uBipqakYHh6edME/ljRNwyeffIIrV64gLS0NRUVF8Hg8
      qKyslHq39dDQEM6dO4fW1lYsXboUOTk5sNlsuHHjhrSaQgjcu3cPZWVlsFgsKC4uRkpKCvx+
      v36Hrgw9PT0oLS1FT08PiouL9elpYjXLq+ED4Nq1a8jKysL69etx7Ngx/cEZra2t0voUhRAo
      KyvDU089hdHRUVy9ehXAxKfz1tZWKTWBiTt+u7u7sX//fpSVlaGvrw/ARBjJuvYghMCHH36I
      p59+Gp2dnfpBPxQKSbuFHpjoigkGg9i9ezdOnTqlb197e7uUh6MAn/5eN2/ejMzMTJw+fVqf
      vljmQSIcDuPKlSt45plnUFdXh3v37gGYuL4l84726upq2Gw2PPHEEzhx4oR+0G9ra5P24UkI
      gXPnzuHJJ59EQkIC3n//fQCfPqNYlpGREVRWVuLZZ5/F7du30dzcDGAijGR9eBJC4P3338eX
      v/xlqKqq3zgZy+OE4QNgaGgIGRkZSEtL0x/wILtXLHIR2OVyYdu2bejs7JR64I948HkAzzzz
      DM6dOydt2t6IyPMAHA4Hdu/ejerqaunTbAATn5wifcTPPPMMTpw4IfWMLiIyxUXkGcCRYYMy
      BYNBuN1u2O127N27F9euXZM6xXdEZB8nJiZi165dOHPmjNTnWQDQh5omJCRg1apVMJlMqKmp
      kVoTmLjeEemifeqpp3Dx4kXpT7LTNA1WqxUulwubN2/Wn2oXS4YPgIyMDP0T0/Lly2EymfDh
      hx9KPTCaTCYoioLBwUEoioK9e/eivLxcn6tflsjzACL3HJSUlOD48eMzfqzcw5jNZoTDYYyO
      jsJkMmHfvn04d+6c/glKlvz8fFRVVUEIgaSkJCxbtgynTp3C8PCw1Lputxvt7e1QFAVbt25F
      Y2Mjbty4ITV8HA4HhoaGEAwGYbVasW/fPhw7dkzqGRYAFBQUoKKiAkIIZGRkIDMzE2fPnpXa
      xRYZpdfd3Q1FUbBjxw5UVFSgsrJSavi43W50dXVB0zQ4nU7s3r0bR44cQXd3t7SaJpMJZrMZ
      /f39UBQFu3fvxieffIL79+/H7DhhfuWVV16JSUsLVHJyMkZGRpCcnKw/CyAUCkFVVeTl5Um5
      mKUoCtLS0jA6OoqEhARYrVYsWbIEjY2NSE9Pl3bDkMPhgNVqRVxcHCwWC5KSkpCcnIyuri4U
      FhZKmSJZURR9hIjL5YLdbkdhYSEaGhqQk5Mj7caduLg4CCH0qR9SU1ORkJCAvr4+FBYWSrlw
      pygKMjMz0d/frw9TXLJkCXp7e+F0OqU9D8BkMun1IlMT5Ofno6mpSZ9zSoaEhAT9jCfyUBir
      1YqRkRHk5+dL28fZ2dno6+tDYmIizGYzli5dio6ODiQmJkobQWexWPT3qs1mQ3x8PHJyctDS
      0oL8/PzY3JT1GZGhvMPDw3C73bBarSguLkZTUxNSU1NjMh00RwERERmU4buAiIiMigFARGRQ
      /z/0t3VWeM4whwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
